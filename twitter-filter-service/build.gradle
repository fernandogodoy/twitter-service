buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}

ext{
	springSocialVersion = '1.1.2.RELEASE'
	springSocialTwitter = '1.1.0.RELEASE'
	junitVersion = '5.4.0'
	lombokVersion = '1.18.6'
	h2DBVersion = '1.4.198'
	javaFakerVersion = '0.17.2'
	commonsLangVersion = '3.8.1'
	modelMapperVersion = '2.3.2'
	postgreSQLVersion = '9.4-1200-jdbc41'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compileOnly("org.projectlombok:lombok:${lombokVersion}")

	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-logging")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.social:spring-social-twitter:${springSocialTwitter}")
	compile("org.springframework.social:spring-social-web:${springSocialTwitter}")
	compile("org.springframework.social:spring-social-security:${springSocialVersion}")
	compile("org.apache.commons:commons-lang3:${commonsLangVersion}")
	
	
	compile("org.modelmapper:modelmapper:${modelMapperVersion}")
	compile("org.postgresql:postgresql:${postgreSQLVersion}") 

    testCompile("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
	testCompile("org.springframework.boot:spring-boot-starter-test")
	
	testCompile("com.h2database:h2:${h2DBVersion}")
	testCompile("com.github.javafaker:javafaker:${javaFakerVersion}")
	
	
}

repositories {
        mavenCentral()
        jcenter()
}

test {
    useJUnitPlatform()
}    
    